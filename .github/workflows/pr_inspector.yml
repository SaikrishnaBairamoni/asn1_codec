name: PR Inspector

on:
  pull_request:
    types:
      - opened
      - edited
      - synchronize

jobs:
  inspect_pr:
    runs-on: ubuntu-latest

    steps:
      - name: Check if PR has issue reference
        id: check_issue_reference
        uses: actions/checkout@v2
        with:
          ref: ${{ github.event.pull_request.head.ref }}
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.x
      - name: Install dependencies
        run: pip install requests
      - name: Run PR Inspector
        env:
          BOT_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          python - <<EOF
          from github import Github

          # Your GitHub personal access token
          BOT_TOKEN = os.environ.get("BOT_TOKEN")
          
          # The repository owner and name
          REPO_OWNER = 'SaikrishnaBairamoni'
          REPO_NAME = 'asn1_codec'
          
          # Regular expression pattern to match issue references
          ISSUE_REFERENCE_PATTERN = r'#\d+'
          
          def comment_on_missing_issue_references(pr, repo):
              # Check if the PR body contains any issue references
              if not any(re.findall(ISSUE_REFERENCE_PATTERN, pr.body)):
                  message = "This pull request does not reference any issues. Please add references to related issues."
                  pr.create_issue_comment(message)
          
          def main():
              # Initialize the GitHub API client
              g = Github(BOT_TOKEN)
          
              # Get the repository
              repo = g.get_repo(f'{REPO_OWNER}/{REPO_NAME}')
          
              # Get a list of open pull requests for the repository
              open_prs = repo.get_pulls(state='open')
          
              # Loop through the open PRs
              for pr in open_prs:
                  comment_on_missing_issue_references(pr, repo)
          
          if __name__ == "__main__":
              main()
          
          EOF
